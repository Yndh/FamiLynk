// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model user {
  id           String    @id @default(cuid())
  name         String    @unique
  email        String    @unique
  password     String
  createdAt    DateTime  @default(now())
  profiles     profile[]
  owned_houses house[]
}

model profile {
  id           Int           @id @default(autoincrement())
  user_id      String
  display_name String?
  join_date    DateTime      @default(now())
  duties       dutie[]
  notes        note[]
  user_houses  user_house[]
  plan_of_day  plan_of_day[]
  calendars    calendar[]
  user         user          @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model house {
  id          Int           @id @default(autoincrement())
  owner       String
  name        String
  created_at  DateTime      @default(now())
  code        String        @unique
  duties      dutie[]
  notes       note[]
  user_houses user_house[]
  plan_of_day plan_of_day[]
  calendars   calendar[]
  user        user          @relation(fields: [owner], references: [id], onDelete: Cascade)
}

model dutie {
  id         Int      @id @default(autoincrement())
  profile_id Int
  house_id   Int
  title      String
  is_done    Boolean
  week_day   Int
  created_at DateTime @default(now())
  profile    profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  house      house    @relation(fields: [house_id], references: [id], onDelete: Cascade)
}

model note {
  id          Int      @id @default(autoincrement())
  profile_id  Int
  house_id    Int
  title       String
  description String
  createdAt   DateTime @default(now())
  isPinned    Boolean  @default(false)
  color       String
  profile     profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  house       house    @relation(fields: [house_id], references: [id], onDelete: Cascade)
}

model user_house {
  id         Int      @id @default(autoincrement())
  profile_id Int
  house_id   Int
  join_date  DateTime @default(now())
  profile    profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  house      house    @relation(fields: [house_id], references: [id], onDelete: Cascade)
}

model plan_of_day {
  id         Int     @id @default(autoincrement())
  profile_id Int
  house_id   Int
  title      String
  start      String
  end        String
  profile    profile @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  house      house   @relation(fields: [house_id], references: [id], onDelete: Cascade)
}

model calendar {
  id         Int      @id @default(autoincrement())
  profile_id Int
  house_id   Int
  title      String
  start      DateTime
  end        DateTime
  color      String
  createdAt  DateTime @default(now())
  profile    profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  house      house    @relation(fields: [house_id], references: [id], onDelete: Cascade)
}

model refresh {
  id         Int      @id @default(autoincrement())
}
